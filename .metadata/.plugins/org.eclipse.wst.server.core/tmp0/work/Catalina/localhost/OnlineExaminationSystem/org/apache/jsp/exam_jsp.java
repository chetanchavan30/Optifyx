/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/11.0.2
 * Generated at: 2025-01-22 13:58:33 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class exam_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <title>Online Examination System</title>\r\n");
      out.write("    <style>\r\n");
      out.write("        body {\r\n");
      out.write("            font-family: Arial, sans-serif;\r\n");
      out.write("            margin: 0;\r\n");
      out.write("            padding: 0;\r\n");
      out.write("            background-color: #f4f4f4;\r\n");
      out.write("        }\r\n");
      out.write("        .container {\r\n");
      out.write("            width: 50%;\r\n");
      out.write("            margin: 50px auto;\r\n");
      out.write("            background: #fff;\r\n");
      out.write("            padding: 20px;\r\n");
      out.write("            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\r\n");
      out.write("        }\r\n");
      out.write("        h1 {\r\n");
      out.write("            text-align: center;\r\n");
      out.write("            color: #333;\r\n");
      out.write("        }\r\n");
      out.write("        .question {\r\n");
      out.write("            margin-bottom: 20px;\r\n");
      out.write("        }\r\n");
      out.write("        .question h3 {\r\n");
      out.write("            margin: 0 0 10px 0;\r\n");
      out.write("        }\r\n");
      out.write("        .btn-submit {\r\n");
      out.write("            display: block;\r\n");
      out.write("            width: 100%;\r\n");
      out.write("            padding: 10px;\r\n");
      out.write("            background-color: #28a745;\r\n");
      out.write("            color: white;\r\n");
      out.write("            border: none;\r\n");
      out.write("            border-radius: 5px;\r\n");
      out.write("            font-size: 16px;\r\n");
      out.write("            cursor: pointer;\r\n");
      out.write("        }\r\n");
      out.write("        .btn-submit:hover {\r\n");
      out.write("            background-color: #218838;\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <div class=\"container\">\r\n");
      out.write("        <h1>Online Examination System</h1>\r\n");
      out.write("\r\n");
      out.write("        <form action=\"submitAnswers\" method=\"post\">\r\n");
      out.write("            <div class=\"question\">\r\n");
      out.write("                <h3>1. What is the default value of an int in Java?</h3>\r\n");
      out.write("                <label><input type=\"radio\" name=\"q1\" value=\"0\" required> 0</label><br>\r\n");
      out.write("                <label><input type=\"radio\" name=\"q1\" value=\"1\"> 1</label><br>\r\n");
      out.write("                <label><input type=\"radio\" name=\"q1\" value=\"null\"> null</label><br>\r\n");
      out.write("                <label><input type=\"radio\" name=\"q1\" value=\"undefined\"> undefined</label>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <div class=\"question\">\r\n");
      out.write("                <h3>2. Which of these is not a keyword in Java?</h3>\r\n");
      out.write("                <label><input type=\"radio\" name=\"q2\" value=\"static\" required> static</label><br>\r\n");
      out.write("                <label><input type=\"radio\" name=\"q2\" value=\"boolean\"> boolean</label><br>\r\n");
      out.write("                <label><input type=\"radio\" name=\"q2\" value=\"void\"> void</label><br>\r\n");
      out.write("                <label><input type=\"radio\" name=\"q2\" value=\"main\"> main</label>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <div class=\"question\">\r\n");
      out.write("                <h3>3. What is the size of a char in Java?</h3>\r\n");
      out.write("                <label><input type=\"radio\" name=\"q3\" value=\"1 byte\" required> 1 byte</label><br>\r\n");
      out.write("                <label><input type=\"radio\" name=\"q3\" value=\"2 bytes\"> 2 bytes</label><br>\r\n");
      out.write("                <label><input type=\"radio\" name=\"q3\" value=\"4 bytes\"> 4 bytes</label><br>\r\n");
      out.write("                <label><input type=\"radio\" name=\"q3\" value=\"8 bytes\"> 8 bytes</label>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <div class=\"question\">\r\n");
      out.write("                <h3>4. Which method is called to start a thread in Java?</h3>\r\n");
      out.write("                <label><input type=\"radio\" name=\"q4\" value=\"run()\" required> run()</label><br>\r\n");
      out.write("                <label><input type=\"radio\" name=\"q4\" value=\"start()\"> start()</label><br>\r\n");
      out.write("                <label><input type=\"radio\" name=\"q4\" value=\"begin()\"> begin()</label><br>\r\n");
      out.write("                <label><input type=\"radio\" name=\"q4\" value=\"init()\"> init()</label>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <div class=\"question\">\r\n");
      out.write("                <h3>5. Which of the following is a marker interface?</h3>\r\n");
      out.write("                <label><input type=\"radio\" name=\"q5\" value=\"Serializable\" required> Serializable</label><br>\r\n");
      out.write("                <label><input type=\"radio\" name=\"q5\" value=\"Cloneable\"> Cloneable</label><br>\r\n");
      out.write("                <label><input type=\"radio\" name=\"q5\" value=\"Runnable\"> Runnable</label><br>\r\n");
      out.write("                <label><input type=\"radio\" name=\"q5\" value=\"None of the above\"> None of the above</label>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <div class=\"question\">\r\n");
      out.write("                <h3>6. Which exception is thrown when an array is accessed with an invalid index?</h3>\r\n");
      out.write("                <label><input type=\"radio\" name=\"q6\" value=\"ArrayIndexOutOfBoundsException\" required> ArrayIndexOutOfBoundsException</label><br>\r\n");
      out.write("                <label><input type=\"radio\" name=\"q6\" value=\"NullPointerException\"> NullPointerException</label><br>\r\n");
      out.write("                <label><input type=\"radio\" name=\"q6\" value=\"NumberFormatException\"> NumberFormatException</label><br>\r\n");
      out.write("                <label><input type=\"radio\" name=\"q6\" value=\"ClassCastException\"> ClassCastException</label>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <div class=\"question\">\r\n");
      out.write("                <h3>7. What is the superclass of all classes in Java?</h3>\r\n");
      out.write("                <label><input type=\"radio\" name=\"q7\" value=\"Object\" required> Object</label><br>\r\n");
      out.write("                <label><input type=\"radio\" name=\"q7\" value=\"Class\"> Class</label><br>\r\n");
      out.write("                <label><input type=\"radio\" name=\"q7\" value=\"Interface\"> Interface</label><br>\r\n");
      out.write("                <label><input type=\"radio\" name=\"q7\" value=\"None of the above\"> None of the above</label>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <div class=\"question\">\r\n");
      out.write("                <h3>8. Which of the following is used to handle exceptions in Java?</h3>\r\n");
      out.write("                <label><input type=\"radio\" name=\"q8\" value=\"try-catch\" required> try-catch</label><br>\r\n");
      out.write("                <label><input type=\"radio\" name=\"q8\" value=\"if-else\"> if-else</label><br>\r\n");
      out.write("                <label><input type=\"radio\" name=\"q8\" value=\"switch-case\"> switch-case</label><br>\r\n");
      out.write("                <label><input type=\"radio\" name=\"q8\" value=\"None of the above\"> None of the above</label>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <div class=\"question\">\r\n");
      out.write("                <h3>9. Which of the following is a valid constructor declaration in Java?</h3>\r\n");
      out.write("                <label><input type=\"radio\" name=\"q9\" value=\"public MyClass()\" required> public MyClass()</label><br>\r\n");
      out.write("                <label><input type=\"radio\" name=\"q9\" value=\"MyClass() void\"> MyClass() void</label><br>\r\n");
      out.write("                <label><input type=\"radio\" name=\"q9\" value=\"void MyClass()\"> void MyClass()</label><br>\r\n");
      out.write("                <label><input type=\"radio\" name=\"q9\" value=\"None of the above\"> None of the above</label>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <div class=\"question\">\r\n");
      out.write("                <h3>10. What is the purpose of the `final` keyword in Java?</h3>\r\n");
      out.write("                <label><input type=\"radio\" name=\"q10\" value=\"To prevent inheritance\" required> To prevent inheritance</label><br>\r\n");
      out.write("                <label><input type=\"radio\" name=\"q10\" value=\"To create constant variables\"> To create constant variables</label><br>\r\n");
      out.write("                <label><input type=\"radio\" name=\"q10\" value=\"Both of the above\"> Both of the above</label><br>\r\n");
      out.write("                <label><input type=\"radio\" name=\"q10\" value=\"None of the above\"> None of the above</label>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <input type=\"submit\" class=\"btn-submit\" value=\"Submit Answers\">\r\n");
      out.write("        </form>\r\n");
      out.write("    </div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
